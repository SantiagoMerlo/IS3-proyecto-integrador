name: ci

on:
  push:
    branches: master

jobs:
#############  BUILDING 
  docker:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Docker Login
      env:
        DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      run: docker login -u $DOCKER_USER -p $DOCKERHUB_PASSWORD
    - uses: actions/checkout@master
    - name: Building
      run: |
        docker build -t santiagomerlo/result:latest ./result
        docker build -t santiagomerlo/vote:latest ./vote
        docker build -t santiagomerlo/worker:latest ./worker
    - name: Pushing 
      run: |
        docker push santiagomerlo/result:latest
        docker push santiagomerlo/vote:latest
        docker push santiagomerlo/worker:latest
#############  TESTING 
#############  DEPLOY 
  deployWorker:
    name: Delpoy Worker in Heroku
    runs-on: ubuntu-latest
    needs: [docker] # in the future this needs a testing
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.6.8
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: 'is3-worker'
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          appdir: "worker"
  deployVote:
    name: Delpoy Vote in Heroku
    runs-on: ubuntu-latest
    needs: [deployWorker]
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.6.8
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: 'is3-vote'
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          appdir: "vote"
  deployResult:
    name: Deploy Result in Heroku
    runs-on: ubuntu-latest
    needs: [deployVote]
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.6.8
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: 'is3-result'
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          appdir: "result"

