name: dev

on:
  push:
    branches: dev

jobs:
  docker:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Docker Login
      env:
        DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      run: docker login -u $DOCKER_USER -p $DOCKERHUB_PASSWORD
    - uses: actions/checkout@master
    - name: Building
      run: |
        docker build -t santiagomerlo/result:latest ./result
        docker build -t santiagomerlo/vote:latest ./vote
        docker build -t santiagomerlo/worker:latest ./worker
    - name: Pushing 
      run: |
        docker push santiagomerlo/result:latest
        docker push santiagomerlo/vote:latest
        docker push santiagomerlo/worker:latest
  unit_test_vote:
    name: Unit Test with Python
    runs-on: ubuntu-latest
    needs: [docker]
    strategy:
      matrix:
        python-version: [3.7]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          cd ./vote
          pip install -r requirements.txt
      - name: PyTest
        run: python -m pytest ./vote/test --junit-xml pytest.xml
      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Unit Test Results (Python ${{ matrix.python-version }})
          path: pytest.xml
  #SonarCloud:
  #  name: Build
  #  runs-on: ubuntu-latest
  #  #needs: [docker]
  #  steps:
  #    - uses: actions/checkout@v2
  #      with:
  #        fetch-depth: 0
  #    - name: Set up JDK 11
  #      uses: actions/setup-java@v1
  #      with:
  #        java-version: 11
  #    - name: Cache SonarCloud packages
  #      uses: actions/cache@v1
  #      with:
  #        path: ~/.sonar/cache
  #        key: ${{ runner.os }}-sonar
  #        restore-keys: ${{ runner.os }}-sonar
  #    - name: Cache Maven packages
  #      uses: actions/cache@v1
  #      with:
  #        path: ~/.m2
  #        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
  #        restore-keys: ${{ runner.os }}-m2
  #    - name: Build and analyze
  #      env:
  #        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar 